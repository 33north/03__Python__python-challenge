# Importing modules/packagesimport csvimport os# Define the csvpath variable using os.path.join methodcsvpath = os.path.join("resources", "budget_data.csv")output = os.path.join("analysis", "financial_analysis.csv")# Empty lists and variables:total_months = 0total = 0diff_amt_list = []diff_amt = 0avg_change = 0greatest_increase_profit_month = ""greatest_increase_profit_num = 0greatest_decrease_profit_month = ""greatest_decrease_profit_num = 0# Function that prints outdef financial_analysis_output(total_months, total, avg_change,                               greatest_increase_profit_month, greatest_increase_profit_num,                              greatest_decrease_profit_month, greatest_decrease_profit_num):    print("""Financial Analysis\n----------------------------""")    print(f"Total Months: {total_months}")    print(f"Total: ${total:,.2f}")    print(f"Average Change: ${avg_change:,.2f}")    print(f"Greatest Increase In Profits: {greatest_increase_profit_month} (${greatest_increase_profit_num:,.2f})")    print(f"Greatest Decrease In Profits: {greatest_decrease_profit_month} (${greatest_decrease_profit_num:,.2f})")    # Use context manager to open and read the budget_data.csv filewith open(csvpath, "r") as budget_data:    # Reads the data from the budget_data.csv via the csv.reader method into csv_reader variable    csv_reader = csv.reader(budget_data, delimiter = ",")    csv_header = next(csv_reader)        # The list comprehension reads each row of csv_reader object and appends to budget_data_list list    budget_data_list = [row for row in csv_reader]    # Finds total months based on length of budget_data_list list    total_months = len(budget_data_list)        # For-loop to go through budget_data_list list     for i in range(0, len(budget_data_list)):                # Sums up all the profit/losses values in list        total += int(budget_data_list[i][1])                # For-loop will calculate the change between the next month's amount and the current month's amount        for j in range(0, (len(budget_data_list[i]) - 1)):            if i != 85:                diff_amt = int(budget_data_list[i+1][1]) - int(budget_data_list[i][1])                diff_amt_list.append(diff_amt)            elif i == 85:                break    # Finds either the greatest increase or decrease in profit from diff_amt_list list using max() and min() function    greatest_increase_profit_num = max(diff_amt_list)    greatest_decrease_profit_num = min(diff_amt_list)        # For-loop runs through budget_data_list and whenever there's a match for:     #   - greatest_increase_profit_num, it will store the month and year in greatest_increase_profit_month    #   - greatest_decrease_profit_num, it will store the month and year in greatest_decrease_profit_month    for i in range(0, (len(budget_data_list) - 1)):        for j in range(0, (len(budget_data_list[i]) - 1)):            if ((int(budget_data_list[i+1][1]) - int(budget_data_list[i][1])) == greatest_increase_profit_num):                greatest_increase_profit_month = budget_data_list[i+1][0]            if (int(budget_data_list[i+1][1]) - int(budget_data_list[i][1])) == greatest_decrease_profit_num:                greatest_decrease_profit_month = budget_data_list[i+1][0]        # Calculates the average change across all months    avg_change = sum(diff_amt_list)/len(diff_amt_list)        # Calls financial_analysis_output function    financial_analysis_output(total_months, total, avg_change,                               greatest_increase_profit_month, greatest_increase_profit_num,                              greatest_decrease_profit_month, greatest_decrease_profit_num)    # Writes the output to a csv filewith open(output, "w") as csvfile:    csvwriter = csv.writer(csvfile)    csvwriter.writerow("""Financial Analysis\n----------------------------""")    csvwriter.writerow(f"Total Months: {total_months}")    csvwriter.writerow(f"Total: ${total:,.2f}")    csvwriter.writerow(f"Average Change: ${avg_change:,.2f}")    csvwriter.writerow(f"Greatest Increase In Profits: {greatest_increase_profit_month} (${greatest_increase_profit_num:,.2f})")    csvwriter.writerow(f"Greatest Decrease In Profits: {greatest_decrease_profit_month} (${greatest_decrease_profit_num:,.2f})")                        # financial_analysis_output(total_months, total, avg_change,         #                       greatest_increase_profit_month, greatest_increase_profit_num,        #                       greatest_decrease_profit_month, greatest_decrease_profit_num))